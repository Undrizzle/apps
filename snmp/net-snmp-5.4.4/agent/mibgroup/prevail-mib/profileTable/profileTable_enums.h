/*
 * Note: this file originally auto-generated by mib2c using
 *  : generic-table-enums.m2c 12526 2005-07-15 22:41:16Z rstory $
 *
 * $Id:$
 */
#ifndef PROFILETABLE_ENUMS_H
#define PROFILETABLE_ENUMS_H

#ifdef __cplusplus
extern "C" {
#endif

 /*
 * NOTES on enums
 * ==============
 *
 * Value Mapping
 * -------------
 * If the values for your data type don't exactly match the
 * possible values defined by the mib, you should map them
 * below. For example, a boolean flag (1/0) is usually represented
 * as a TruthValue in a MIB, which maps to the values (1/2).
 *
 */
/*************************************************************************
 *************************************************************************
 *
 * enum definitions for table profileTable
 *
 *************************************************************************
 *************************************************************************/

/*************************************************************
 * constants for enums for the MIB node
 * proMacLimit (HostsLimitingValue / ASN_INTEGER)
 *
 * since a Textual Convention may be referenced more than once in a
 * MIB, protect againt redefinitions of the enum values.
 */
#ifndef HOSTSLIMITINGVALUE_ENUMS
#define HOSTSLIMITINGVALUE_ENUMS

#define HOSTSLIMITINGVALUE_HOSTS_LIMITING_DISABLED  0 
#define HOSTSLIMITINGVALUE_ONE_HOST  1 
#define HOSTSLIMITINGVALUE_TWO_HOSTS  2 
#define HOSTSLIMITINGVALUE_THREE_HOSTS  3 
#define HOSTSLIMITINGVALUE_FOUR_HOSTS  4 
#define HOSTSLIMITINGVALUE_FIVE_HOSTS  5 
#define HOSTSLIMITINGVALUE_SIX_HOSTS  6 
#define HOSTSLIMITINGVALUE_SEVEN_HOSTS  7 
#define HOSTSLIMITINGVALUE_EIGHT_HOSTS  8 
#define HOSTSLIMITINGVALUE_NULL_HOSTS  65 

#endif /* HOSTSLIMITINGVALUE_ENUMS */


/*************************************************************
 * constants for enums for the MIB node
 * proIgmpPri (PriQueueValue / ASN_INTEGER)
 *
 * since a Textual Convention may be referenced more than once in a
 * MIB, protect againt redefinitions of the enum values.
 */
#ifndef PRIQUEUEVALUE_ENUMS
#define PRIQUEUEVALUE_ENUMS

#define PRIQUEUEVALUE_CAP0  0 
#define PRIQUEUEVALUE_CAP1  1 
#define PRIQUEUEVALUE_CAP2  2 
#define PRIQUEUEVALUE_CAP3  3 

#endif /* PRIQUEUEVALUE_ENUMS */


/*************************************************************
 * constants for enums for the MIB node
 * proUnicastPri (PriQueueValue / ASN_INTEGER)
 *
 * since a Textual Convention may be referenced more than once in a
 * MIB, protect againt redefinitions of the enum values.
 */
#ifndef PRIQUEUEVALUE_ENUMS
#define PRIQUEUEVALUE_ENUMS

#define PRIQUEUEVALUE_CAP0  0 
#define PRIQUEUEVALUE_CAP1  1 
#define PRIQUEUEVALUE_CAP2  2 
#define PRIQUEUEVALUE_CAP3  3 

#endif /* PRIQUEUEVALUE_ENUMS */


/*************************************************************
 * constants for enums for the MIB node
 * proAvsPri (PriQueueValue / ASN_INTEGER)
 *
 * since a Textual Convention may be referenced more than once in a
 * MIB, protect againt redefinitions of the enum values.
 */
#ifndef PRIQUEUEVALUE_ENUMS
#define PRIQUEUEVALUE_ENUMS

#define PRIQUEUEVALUE_CAP0  0 
#define PRIQUEUEVALUE_CAP1  1 
#define PRIQUEUEVALUE_CAP2  2 
#define PRIQUEUEVALUE_CAP3  3 

#endif /* PRIQUEUEVALUE_ENUMS */


/*************************************************************
 * constants for enums for the MIB node
 * proMcastPri (PriQueueValue / ASN_INTEGER)
 *
 * since a Textual Convention may be referenced more than once in a
 * MIB, protect againt redefinitions of the enum values.
 */
#ifndef PRIQUEUEVALUE_ENUMS
#define PRIQUEUEVALUE_ENUMS

#define PRIQUEUEVALUE_CAP0  0 
#define PRIQUEUEVALUE_CAP1  1 
#define PRIQUEUEVALUE_CAP2  2 
#define PRIQUEUEVALUE_CAP3  3 

#endif /* PRIQUEUEVALUE_ENUMS */


/*************************************************************
 * constants for enums for the MIB node
 * proTbaPriSts (TruthValue / ASN_INTEGER)
 *
 * since a Textual Convention may be referenced more than once in a
 * MIB, protect againt redefinitions of the enum values.
 */
#ifndef TRUTHVALUE_ENUMS
#define TRUTHVALUE_ENUMS

#define TRUTHVALUE_TRUE  1 
#define TRUTHVALUE_FALSE  2 

#endif /* TRUTHVALUE_ENUMS */


/*************************************************************
 * constants for enums for the MIB node
 * proCosPriSts (TruthValue / ASN_INTEGER)
 *
 * since a Textual Convention may be referenced more than once in a
 * MIB, protect againt redefinitions of the enum values.
 */
#ifndef TRUTHVALUE_ENUMS
#define TRUTHVALUE_ENUMS

#define TRUTHVALUE_TRUE  1 
#define TRUTHVALUE_FALSE  2 

#endif /* TRUTHVALUE_ENUMS */


/*************************************************************
 * constants for enums for the MIB node
 * proCos0pri (PriQueueValue / ASN_INTEGER)
 *
 * since a Textual Convention may be referenced more than once in a
 * MIB, protect againt redefinitions of the enum values.
 */
#ifndef PRIQUEUEVALUE_ENUMS
#define PRIQUEUEVALUE_ENUMS

#define PRIQUEUEVALUE_CAP0  0 
#define PRIQUEUEVALUE_CAP1  1 
#define PRIQUEUEVALUE_CAP2  2 
#define PRIQUEUEVALUE_CAP3  3 

#endif /* PRIQUEUEVALUE_ENUMS */


/*************************************************************
 * constants for enums for the MIB node
 * proCos1pri (PriQueueValue / ASN_INTEGER)
 *
 * since a Textual Convention may be referenced more than once in a
 * MIB, protect againt redefinitions of the enum values.
 */
#ifndef PRIQUEUEVALUE_ENUMS
#define PRIQUEUEVALUE_ENUMS

#define PRIQUEUEVALUE_CAP0  0 
#define PRIQUEUEVALUE_CAP1  1 
#define PRIQUEUEVALUE_CAP2  2 
#define PRIQUEUEVALUE_CAP3  3 

#endif /* PRIQUEUEVALUE_ENUMS */


/*************************************************************
 * constants for enums for the MIB node
 * proCos2pri (PriQueueValue / ASN_INTEGER)
 *
 * since a Textual Convention may be referenced more than once in a
 * MIB, protect againt redefinitions of the enum values.
 */
#ifndef PRIQUEUEVALUE_ENUMS
#define PRIQUEUEVALUE_ENUMS

#define PRIQUEUEVALUE_CAP0  0 
#define PRIQUEUEVALUE_CAP1  1 
#define PRIQUEUEVALUE_CAP2  2 
#define PRIQUEUEVALUE_CAP3  3 

#endif /* PRIQUEUEVALUE_ENUMS */


/*************************************************************
 * constants for enums for the MIB node
 * proCos3pri (PriQueueValue / ASN_INTEGER)
 *
 * since a Textual Convention may be referenced more than once in a
 * MIB, protect againt redefinitions of the enum values.
 */
#ifndef PRIQUEUEVALUE_ENUMS
#define PRIQUEUEVALUE_ENUMS

#define PRIQUEUEVALUE_CAP0  0 
#define PRIQUEUEVALUE_CAP1  1 
#define PRIQUEUEVALUE_CAP2  2 
#define PRIQUEUEVALUE_CAP3  3 

#endif /* PRIQUEUEVALUE_ENUMS */


/*************************************************************
 * constants for enums for the MIB node
 * proCos4pri (PriQueueValue / ASN_INTEGER)
 *
 * since a Textual Convention may be referenced more than once in a
 * MIB, protect againt redefinitions of the enum values.
 */
#ifndef PRIQUEUEVALUE_ENUMS
#define PRIQUEUEVALUE_ENUMS

#define PRIQUEUEVALUE_CAP0  0 
#define PRIQUEUEVALUE_CAP1  1 
#define PRIQUEUEVALUE_CAP2  2 
#define PRIQUEUEVALUE_CAP3  3 

#endif /* PRIQUEUEVALUE_ENUMS */


/*************************************************************
 * constants for enums for the MIB node
 * proCos5pri (PriQueueValue / ASN_INTEGER)
 *
 * since a Textual Convention may be referenced more than once in a
 * MIB, protect againt redefinitions of the enum values.
 */
#ifndef PRIQUEUEVALUE_ENUMS
#define PRIQUEUEVALUE_ENUMS

#define PRIQUEUEVALUE_CAP0  0 
#define PRIQUEUEVALUE_CAP1  1 
#define PRIQUEUEVALUE_CAP2  2 
#define PRIQUEUEVALUE_CAP3  3 

#endif /* PRIQUEUEVALUE_ENUMS */


/*************************************************************
 * constants for enums for the MIB node
 * proCos6pri (PriQueueValue / ASN_INTEGER)
 *
 * since a Textual Convention may be referenced more than once in a
 * MIB, protect againt redefinitions of the enum values.
 */
#ifndef PRIQUEUEVALUE_ENUMS
#define PRIQUEUEVALUE_ENUMS

#define PRIQUEUEVALUE_CAP0  0 
#define PRIQUEUEVALUE_CAP1  1 
#define PRIQUEUEVALUE_CAP2  2 
#define PRIQUEUEVALUE_CAP3  3 

#endif /* PRIQUEUEVALUE_ENUMS */


/*************************************************************
 * constants for enums for the MIB node
 * proCos7pri (PriQueueValue / ASN_INTEGER)
 *
 * since a Textual Convention may be referenced more than once in a
 * MIB, protect againt redefinitions of the enum values.
 */
#ifndef PRIQUEUEVALUE_ENUMS
#define PRIQUEUEVALUE_ENUMS

#define PRIQUEUEVALUE_CAP0  0 
#define PRIQUEUEVALUE_CAP1  1 
#define PRIQUEUEVALUE_CAP2  2 
#define PRIQUEUEVALUE_CAP3  3 

#endif /* PRIQUEUEVALUE_ENUMS */


/*************************************************************
 * constants for enums for the MIB node
 * proTosPriSts (TruthValue / ASN_INTEGER)
 *
 * since a Textual Convention may be referenced more than once in a
 * MIB, protect againt redefinitions of the enum values.
 */
#ifndef TRUTHVALUE_ENUMS
#define TRUTHVALUE_ENUMS

#define TRUTHVALUE_TRUE  1 
#define TRUTHVALUE_FALSE  2 

#endif /* TRUTHVALUE_ENUMS */


/*************************************************************
 * constants for enums for the MIB node
 * proTos0pri (PriQueueValue / ASN_INTEGER)
 *
 * since a Textual Convention may be referenced more than once in a
 * MIB, protect againt redefinitions of the enum values.
 */
#ifndef PRIQUEUEVALUE_ENUMS
#define PRIQUEUEVALUE_ENUMS

#define PRIQUEUEVALUE_CAP0  0 
#define PRIQUEUEVALUE_CAP1  1 
#define PRIQUEUEVALUE_CAP2  2 
#define PRIQUEUEVALUE_CAP3  3 

#endif /* PRIQUEUEVALUE_ENUMS */


/*************************************************************
 * constants for enums for the MIB node
 * proTos1pri (PriQueueValue / ASN_INTEGER)
 *
 * since a Textual Convention may be referenced more than once in a
 * MIB, protect againt redefinitions of the enum values.
 */
#ifndef PRIQUEUEVALUE_ENUMS
#define PRIQUEUEVALUE_ENUMS

#define PRIQUEUEVALUE_CAP0  0 
#define PRIQUEUEVALUE_CAP1  1 
#define PRIQUEUEVALUE_CAP2  2 
#define PRIQUEUEVALUE_CAP3  3 

#endif /* PRIQUEUEVALUE_ENUMS */


/*************************************************************
 * constants for enums for the MIB node
 * proTos2pri (PriQueueValue / ASN_INTEGER)
 *
 * since a Textual Convention may be referenced more than once in a
 * MIB, protect againt redefinitions of the enum values.
 */
#ifndef PRIQUEUEVALUE_ENUMS
#define PRIQUEUEVALUE_ENUMS

#define PRIQUEUEVALUE_CAP0  0 
#define PRIQUEUEVALUE_CAP1  1 
#define PRIQUEUEVALUE_CAP2  2 
#define PRIQUEUEVALUE_CAP3  3 

#endif /* PRIQUEUEVALUE_ENUMS */


/*************************************************************
 * constants for enums for the MIB node
 * proTos3pri (PriQueueValue / ASN_INTEGER)
 *
 * since a Textual Convention may be referenced more than once in a
 * MIB, protect againt redefinitions of the enum values.
 */
#ifndef PRIQUEUEVALUE_ENUMS
#define PRIQUEUEVALUE_ENUMS

#define PRIQUEUEVALUE_CAP0  0 
#define PRIQUEUEVALUE_CAP1  1 
#define PRIQUEUEVALUE_CAP2  2 
#define PRIQUEUEVALUE_CAP3  3 

#endif /* PRIQUEUEVALUE_ENUMS */


/*************************************************************
 * constants for enums for the MIB node
 * proTos4pri (PriQueueValue / ASN_INTEGER)
 *
 * since a Textual Convention may be referenced more than once in a
 * MIB, protect againt redefinitions of the enum values.
 */
#ifndef PRIQUEUEVALUE_ENUMS
#define PRIQUEUEVALUE_ENUMS

#define PRIQUEUEVALUE_CAP0  0 
#define PRIQUEUEVALUE_CAP1  1 
#define PRIQUEUEVALUE_CAP2  2 
#define PRIQUEUEVALUE_CAP3  3 

#endif /* PRIQUEUEVALUE_ENUMS */


/*************************************************************
 * constants for enums for the MIB node
 * proTos5pri (PriQueueValue / ASN_INTEGER)
 *
 * since a Textual Convention may be referenced more than once in a
 * MIB, protect againt redefinitions of the enum values.
 */
#ifndef PRIQUEUEVALUE_ENUMS
#define PRIQUEUEVALUE_ENUMS

#define PRIQUEUEVALUE_CAP0  0 
#define PRIQUEUEVALUE_CAP1  1 
#define PRIQUEUEVALUE_CAP2  2 
#define PRIQUEUEVALUE_CAP3  3 

#endif /* PRIQUEUEVALUE_ENUMS */


/*************************************************************
 * constants for enums for the MIB node
 * proTos6pri (PriQueueValue / ASN_INTEGER)
 *
 * since a Textual Convention may be referenced more than once in a
 * MIB, protect againt redefinitions of the enum values.
 */
#ifndef PRIQUEUEVALUE_ENUMS
#define PRIQUEUEVALUE_ENUMS

#define PRIQUEUEVALUE_CAP0  0 
#define PRIQUEUEVALUE_CAP1  1 
#define PRIQUEUEVALUE_CAP2  2 
#define PRIQUEUEVALUE_CAP3  3 

#endif /* PRIQUEUEVALUE_ENUMS */


/*************************************************************
 * constants for enums for the MIB node
 * proTos7pri (PriQueueValue / ASN_INTEGER)
 *
 * since a Textual Convention may be referenced more than once in a
 * MIB, protect againt redefinitions of the enum values.
 */
#ifndef PRIQUEUEVALUE_ENUMS
#define PRIQUEUEVALUE_ENUMS

#define PRIQUEUEVALUE_CAP0  0 
#define PRIQUEUEVALUE_CAP1  1 
#define PRIQUEUEVALUE_CAP2  2 
#define PRIQUEUEVALUE_CAP3  3 

#endif /* PRIQUEUEVALUE_ENUMS */


/*************************************************************
 * constants for enums for the MIB node
 * proSfbSts (TruthValue / ASN_INTEGER)
 *
 * since a Textual Convention may be referenced more than once in a
 * MIB, protect againt redefinitions of the enum values.
 */
#ifndef TRUTHVALUE_ENUMS
#define TRUTHVALUE_ENUMS

#define TRUTHVALUE_TRUE  1 
#define TRUTHVALUE_FALSE  2 

#endif /* TRUTHVALUE_ENUMS */


/*************************************************************
 * constants for enums for the MIB node
 * proSfuSts (TruthValue / ASN_INTEGER)
 *
 * since a Textual Convention may be referenced more than once in a
 * MIB, protect againt redefinitions of the enum values.
 */
#ifndef TRUTHVALUE_ENUMS
#define TRUTHVALUE_ENUMS

#define TRUTHVALUE_TRUE  1 
#define TRUTHVALUE_FALSE  2 

#endif /* TRUTHVALUE_ENUMS */


/*************************************************************
 * constants for enums for the MIB node
 * proSfmSts (TruthValue / ASN_INTEGER)
 *
 * since a Textual Convention may be referenced more than once in a
 * MIB, protect againt redefinitions of the enum values.
 */
#ifndef TRUTHVALUE_ENUMS
#define TRUTHVALUE_ENUMS

#define TRUTHVALUE_TRUE  1 
#define TRUTHVALUE_FALSE  2 

#endif /* TRUTHVALUE_ENUMS */


/*************************************************************
 * constants for enums for the MIB node
 * proSfRate (StromFilterValue / ASN_INTEGER)
 *
 * since a Textual Convention may be referenced more than once in a
 * MIB, protect againt redefinitions of the enum values.
 */
#ifndef STROMFILTERVALUE_ENUMS
#define STROMFILTERVALUE_ENUMS

#define STROMFILTERVALUE_SFL_DISABLED  0 
#define STROMFILTERVALUE_SFL_1KPPS  1 
#define STROMFILTERVALUE_SFL_2KPPS  2 
#define STROMFILTERVALUE_SFL_4KPPS  3 
#define STROMFILTERVALUE_SFL_8KPPS  4 
#define STROMFILTERVALUE_SFL_16KPPS  5 
#define STROMFILTERVALUE_SFL_32KPPS  6 
#define STROMFILTERVALUE_SFL_64KPPS  7 
#define STROMFILTERVALUE_SFL_128KPPS  8 
#define STROMFILTERVALUE_SFL_256KPPS  9 
#define STROMFILTERVALUE_SFL_512KPPS  10 
#define STROMFILTERVALUE_SFL_1024KPPS  11 

#endif /* STROMFILTERVALUE_ENUMS */


/*************************************************************
 * constants for enums for the MIB node
 * proVlanStatus (TruthValue / ASN_INTEGER)
 *
 * since a Textual Convention may be referenced more than once in a
 * MIB, protect againt redefinitions of the enum values.
 */
#ifndef TRUTHVALUE_ENUMS
#define TRUTHVALUE_ENUMS

#define TRUTHVALUE_TRUE  1 
#define TRUTHVALUE_FALSE  2 

#endif /* TRUTHVALUE_ENUMS */


/*************************************************************
 * constants for enums for the MIB node
 * proPortPriSts (TruthValue / ASN_INTEGER)
 *
 * since a Textual Convention may be referenced more than once in a
 * MIB, protect againt redefinitions of the enum values.
 */
#ifndef TRUTHVALUE_ENUMS
#define TRUTHVALUE_ENUMS

#define TRUTHVALUE_TRUE  1 
#define TRUTHVALUE_FALSE  2 

#endif /* TRUTHVALUE_ENUMS */


/*************************************************************
 * constants for enums for the MIB node
 * proRxLimitSts (TruthValue / ASN_INTEGER)
 *
 * since a Textual Convention may be referenced more than once in a
 * MIB, protect againt redefinitions of the enum values.
 */
#ifndef TRUTHVALUE_ENUMS
#define TRUTHVALUE_ENUMS

#define TRUTHVALUE_TRUE  1 
#define TRUTHVALUE_FALSE  2 

#endif /* TRUTHVALUE_ENUMS */


/*************************************************************
 * constants for enums for the MIB node
 * proTxLimitSts (TruthValue / ASN_INTEGER)
 *
 * since a Textual Convention may be referenced more than once in a
 * MIB, protect againt redefinitions of the enum values.
 */
#ifndef TRUTHVALUE_ENUMS
#define TRUTHVALUE_ENUMS

#define TRUTHVALUE_TRUE  1 
#define TRUTHVALUE_FALSE  2 

#endif /* TRUTHVALUE_ENUMS */


/*************************************************************
 * constants for enums for the MIB node
 * proPsctlSts (TruthValue / ASN_INTEGER)
 *
 * since a Textual Convention may be referenced more than once in a
 * MIB, protect againt redefinitions of the enum values.
 */
#ifndef TRUTHVALUE_ENUMS
#define TRUTHVALUE_ENUMS

#define TRUTHVALUE_TRUE  1 
#define TRUTHVALUE_FALSE  2 

#endif /* TRUTHVALUE_ENUMS */


/*************************************************************
 * constants for enums for the MIB node
 * proCpuPortSts (TruthValue / ASN_INTEGER)
 *
 * since a Textual Convention may be referenced more than once in a
 * MIB, protect againt redefinitions of the enum values.
 */
#ifndef TRUTHVALUE_ENUMS
#define TRUTHVALUE_ENUMS

#define TRUTHVALUE_TRUE  1 
#define TRUTHVALUE_FALSE  2 

#endif /* TRUTHVALUE_ENUMS */


/*************************************************************
 * constants for enums for the MIB node
 * proEth1sts (TruthValue / ASN_INTEGER)
 *
 * since a Textual Convention may be referenced more than once in a
 * MIB, protect againt redefinitions of the enum values.
 */
#ifndef TRUTHVALUE_ENUMS
#define TRUTHVALUE_ENUMS

#define TRUTHVALUE_TRUE  1 
#define TRUTHVALUE_FALSE  2 

#endif /* TRUTHVALUE_ENUMS */


/*************************************************************
 * constants for enums for the MIB node
 * proEth2sts (TruthValue / ASN_INTEGER)
 *
 * since a Textual Convention may be referenced more than once in a
 * MIB, protect againt redefinitions of the enum values.
 */
#ifndef TRUTHVALUE_ENUMS
#define TRUTHVALUE_ENUMS

#define TRUTHVALUE_TRUE  1 
#define TRUTHVALUE_FALSE  2 

#endif /* TRUTHVALUE_ENUMS */


/*************************************************************
 * constants for enums for the MIB node
 * proEth3sts (TruthValue / ASN_INTEGER)
 *
 * since a Textual Convention may be referenced more than once in a
 * MIB, protect againt redefinitions of the enum values.
 */
#ifndef TRUTHVALUE_ENUMS
#define TRUTHVALUE_ENUMS

#define TRUTHVALUE_TRUE  1 
#define TRUTHVALUE_FALSE  2 

#endif /* TRUTHVALUE_ENUMS */


/*************************************************************
 * constants for enums for the MIB node
 * proEth4sts (TruthValue / ASN_INTEGER)
 *
 * since a Textual Convention may be referenced more than once in a
 * MIB, protect againt redefinitions of the enum values.
 */
#ifndef TRUTHVALUE_ENUMS
#define TRUTHVALUE_ENUMS

#define TRUTHVALUE_TRUE  1 
#define TRUTHVALUE_FALSE  2 

#endif /* TRUTHVALUE_ENUMS */


/*************************************************************
 * constants for enums for the MIB node
 * proCommit (TruthValue / ASN_INTEGER)
 *
 * since a Textual Convention may be referenced more than once in a
 * MIB, protect againt redefinitions of the enum values.
 */
#ifndef TRUTHVALUE_ENUMS
#define TRUTHVALUE_ENUMS

#define TRUTHVALUE_TRUE  1 
#define TRUTHVALUE_FALSE  2 

#endif /* TRUTHVALUE_ENUMS */


/*************************************************************
 * constants for enums for the MIB node
 * proRowStatus (TruthValue / ASN_INTEGER)
 *
 * since a Textual Convention may be referenced more than once in a
 * MIB, protect againt redefinitions of the enum values.
 */
#ifndef TRUTHVALUE_ENUMS
#define TRUTHVALUE_ENUMS

#define TRUTHVALUE_TRUE  1 
#define TRUTHVALUE_FALSE  2 

#endif /* TRUTHVALUE_ENUMS */




#ifdef __cplusplus
}
#endif

#endif /* PROFILETABLE_ENUMS_H */
